<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:util="http://www.springframework.org/schema/util"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		">
	<security:http 
		auto-config="true" 
		use-expressions="true"
		disable-url-rewriting="true">

		<!-- intercepted urls -->
		<security:intercept-url pattern="/users/login" access="permitAll" />
		<security:intercept-url pattern="/users/logindenied" access="permitAll" />
		<security:intercept-url pattern="/j_spring_security_check" access="permitAll" />
		<security:intercept-url pattern="/pages/adios" access="permitAll" />
		<security:intercept-url pattern="/pages/**" access="permitAll" />
		<security:intercept-url pattern="/css/**" access="permitAll" />
		<security:intercept-url pattern="/img/**" access="permitAll" />
		<security:intercept-url pattern="/js/**" access="permitAll" />
		<security:intercept-url pattern="/fonts/**" access="permitAll" />
		<security:intercept-url pattern="/instalacion/**" access="permitAll" />
		<security:intercept-url pattern="/**" access="hasRole('ROLE_USER')" />
		<security:session-management session-fixation-protection="migrateSession" />

		<!-- form login -->
		<security:form-login 
			login-page="/users/login"
			username-parameter="j_username"
			password-parameter="j_password"
			login-processing-url="/j_spring_security_check"
			always-use-default-target="false" default-target-url="/menu"
			authentication-failure-url="/users/logindenied" />

		<!-- logout -->
		<!-- 
			logout-url="/j_spring_security_logout" 
		--> 
		<security:logout invalidate-session="true"
			logout-url="/users/logout"
			logout-success-url="/users/login" 
			delete-cookies="true"
			/>
		<security:csrf token-repository-ref="tokenRepository"/>
		<security:headers disabled="true"/>
		<!-- Agregamos Remember me -->
		<security:remember-me
			key="${remember_me.key}" 
			token-validity-seconds="1209600" 
			remember-me-parameter="remember-me" 
			token-repository-ref="rememberMeTokenRepositoryImpl"
			user-service-ref="userDetailsService" 
			/>
	</security:http>
	<!-- 
	-->
	<bean id="rememberMeTokenRepositoryImpl"
		class="gamification.dao.hibernate.RememberMeTokenRepositoryImpl">
	</bean>
	<bean id="tokenRepository"
		class="org.springframework.security.web.csrf.CookieCsrfTokenRepository"
		p:cookieHttpOnly="false">
	</bean>
	<bean id="savedRequestAwareAuthenticationSuccessHandler"
		class="org.springframework.security.web.authentication.SavedRequestAwareAuthenticationSuccessHandler">
		<property name="targetUrlParameter" value="targetUrl" />
	</bean>
	<!-- authentication manager and password hashing -->
	<!-- 
	-->
	<security:authentication-manager alias="authenticationManager">
		<security:authentication-provider ref="daoAuthenticationProvider" />
	</security:authentication-manager>

	<!-- enable support for Expression-based annotations in Spring Security -->
	<security:global-method-security
		pre-post-annotations="enabled">
		<security:expression-handler ref="expressionHandler" />
	</security:global-method-security>

	<bean id="expressionHandler"
		class="org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler">
	</bean>

	<bean id="daoAuthenticationProvider"
		class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
		<property name="userDetailsService" ref="userDetailsService" />
		<property name="passwordEncoder" ref="passwordEncoder" />
	</bean>

	<bean id="userDetailsService" name="userAuthenticationProvider"
		class="gamification.service.impl.AuthenticationUserDetailsGetter">
		<constructor-arg index="0" ref="userDAOImpl" />
	</bean>

	<bean id="passwordEncoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
	</bean>
	<bean id="accessDecisionManager"
		class="org.springframework.security.access.vote.AffirmativeBased">
		<constructor-arg>
			<list>
				<bean class="org.springframework.security.access.vote.RoleVoter"
					id="roleVoter" />
				<bean class="org.springframework.security.access.vote.AuthenticatedVoter"
					id="authenticatedVoter" />
			</list>
		</constructor-arg>
	</bean>
</beans>
